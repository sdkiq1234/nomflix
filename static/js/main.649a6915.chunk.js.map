{"version":3,"sources":["assets/noPosterSmall.jpg","Routes/Detail sync","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","SearchContainer","SearchTerm","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","first_air_date","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","SHeader","header","List","ul","li","current","SLink","Link","Header","withRouter","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.649a6915.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.0d43aa40.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 75;","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"f0558db31aae412648cf101d48d86d44\",\n    language: \"en-US\",\n  },\n});\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, { params: { append_to_response: \"videos\" } }),\n  search: (term) => api.get(\"search/tv\", { params: { query: term } }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      🕖\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 5px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.jpg\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <HelmetProvider>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </HelmetProvider>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import { movieApi } from \"api.js\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter.js\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({ error: \"Can't find movies information\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  handleSubmit,\n  loading,\n  error,\n  updateTerm,\n}) => (\n  <HelmetProvider>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  // year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  // year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message text=\"Nothing found\" color=\"#95a5a6\" />\n            )}\n        </>\n      )}\n    </Container>\n  </HelmetProvider>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default SearchPresenter;\n","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    SearchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"error\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n\nexport default SearchContainer;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <HelmetProvider>\n    <Helmet>\n      <title>TV Show | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today Shows\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </HelmetProvider>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import { tvApi } from \"api.js\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <HelmetProvider>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </HelmetProvider>\n  ) : (\n    <HelmetProvider>\n      <Container>\n        <Helmet>\n          <title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}{\" \"}\n            | Nomflix\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSmall.jpg\".default)\n            }\n          />\n          <Data>\n            <Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>∘</Divider>\n              <Item>{result.runtime || result.episode_run_time[0]}</Item>\n              <Divider>∘</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n          </Data>\n        </Content>\n      </Container>\n    </HelmetProvider>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nclass DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n\nexport default DetailContainer;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = withRouter(({ location: { pathname } }) => {\n  return (\n    <SHeader>\n      <List>\n        <Item current={pathname === \"/\"}>\n          <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n          <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </SHeader>\n  );\n});\n\nexport default Header;\n","import React from \"react\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"../Routes/Home/\";\nimport Search from \"../Routes/Search/\";\nimport TV from \"../Routes/TV/\";\nimport Detail from \"../Routes/Detail/\";\nimport Header from \"./Header\";\n\nconst Router = () => (\n  <HashRouter>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </HashRouter>\n);\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n${reset};\na{\n    text-decoration:none;\n    color:inherit;\n}\n*{\n    box-sizing:border-box;\n}\nbody{\n    font-family: -'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    font-size:12px;\n    background-color:rgba(20,20,20,1);\n    color:white;\n    padding-top:50px;\n}\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}